pipeline {
    agent any
    environment {
        EMAIL_TO = "qizheyew@gmail.com" 
    }
    stages {
        stage ('Build') {
            steps {
                echo "building the code using Gradle"
            }
        }   
        stage ('Unit and Integration Tests') {
            steps {
                echo "running unit test using Selenium"
            }
            post {
            success {
                emailtext{
                    mail to: "${env.EMAIL_TO}",
                    subject: "${env.JOB_NAME} - Build #${env.BUILD_NUMBER} - SUCCESS",
                    body: "Project: ${env.JOB_NAME}\nBuild Number: ${env.BUILD_NUMBER}\nStatus: SUCCESS",
                    attachLog: true
                }
            failure {
                emailtext{
                    mail to: "${env.EMAIL_TO}",
                    subject: "${env.JOB_NAME} - Build #${env.BUILD_NUMBER} - SUCCESS",
                    body: "Project: ${env.JOB_NAME}\nBuild Number: ${env.BUILD_NUMBER}\nStatus: SUCCESS",
                    attachLog: true
                }
            }
        }
        }    
        stage ('Code Analysis') {
            steps {
                echo "integrating SonarQube to analyse the code"
            }
        }    
        stage ('Security Scan') {
            steps {
                echo "perfroming security scan on the code using OpenVAS"
            }
            post {
            success {
                emailtext{
                    mail to: "${env.EMAIL_TO}",
                    subject: "${env.JOB_NAME} - Build #${env.BUILD_NUMBER} - SUCCESS",
                    body: "Project: ${env.JOB_NAME}\nBuild Number: ${env.BUILD_NUMBER}\nStatus: SUCCESS",
                    attachLog: true
                }
            }
            failure {
                emailtext{
                    mail to: "${env.EMAIL_TO}",
                    subject: "${env.JOB_NAME} - Build #${env.BUILD_NUMBER} - SUCCESS",
                    body: "Project: ${env.JOB_NAME}\nBuild Number: ${env.BUILD_NUMBER}\nStatus: SUCCESS",
                    attachLog: true
                }
            }
        }
        }    
        stage ('Deploy to Staging') {
            steps {
                echo "deploying the application to AWS"
                sleep 2
            }
        }    
        stage ('Integration Tests on Staging') {
            steps {
                echo "run integration tests on staging environment"
            }
        }    
        stage ('Deploy to Production') {
            steps {
                echo "deploying the application to AWS EC2"
            }
        }
    }
}